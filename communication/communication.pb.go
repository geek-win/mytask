// Code generated by protoc-gen-go. DO NOT EDIT.
// source: communication.proto

package communication

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/lyft/protoc-gen-validate/validate"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// IP address.
type IP struct {
	Addr                 string   `protobuf:"bytes,1,opt,name=addr,proto3" json:"addr,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Port                 int32    `protobuf:"varint,3,opt,name=port,proto3" json:"port,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IP) Reset()         { *m = IP{} }
func (m *IP) String() string { return proto.CompactTextString(m) }
func (*IP) ProtoMessage()    {}
func (*IP) Descriptor() ([]byte, []int) {
	return fileDescriptor_communication_7a5af294c0525d0b, []int{0}
}
func (m *IP) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IP.Unmarshal(m, b)
}
func (m *IP) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IP.Marshal(b, m, deterministic)
}
func (dst *IP) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IP.Merge(dst, src)
}
func (m *IP) XXX_Size() int {
	return xxx_messageInfo_IP.Size(m)
}
func (m *IP) XXX_DiscardUnknown() {
	xxx_messageInfo_IP.DiscardUnknown(m)
}

var xxx_messageInfo_IP proto.InternalMessageInfo

func (m *IP) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

func (m *IP) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *IP) GetPort() int32 {
	if m != nil {
		return m.Port
	}
	return 0
}

// Greet request contains id, ip and message.
type GreetRequest struct {
	Id                   uint64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Ip                   *IP      `protobuf:"bytes,2,opt,name=ip,proto3" json:"ip,omitempty"`
	Message              string   `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GreetRequest) Reset()         { *m = GreetRequest{} }
func (m *GreetRequest) String() string { return proto.CompactTextString(m) }
func (*GreetRequest) ProtoMessage()    {}
func (*GreetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_communication_7a5af294c0525d0b, []int{1}
}
func (m *GreetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GreetRequest.Unmarshal(m, b)
}
func (m *GreetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GreetRequest.Marshal(b, m, deterministic)
}
func (dst *GreetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GreetRequest.Merge(dst, src)
}
func (m *GreetRequest) XXX_Size() int {
	return xxx_messageInfo_GreetRequest.Size(m)
}
func (m *GreetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GreetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GreetRequest proto.InternalMessageInfo

func (m *GreetRequest) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *GreetRequest) GetIp() *IP {
	if m != nil {
		return m.Ip
	}
	return nil
}

func (m *GreetRequest) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// Greet reply contains message and ip.
type GreetReply struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Ip                   *IP      `protobuf:"bytes,2,opt,name=ip,proto3" json:"ip,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GreetReply) Reset()         { *m = GreetReply{} }
func (m *GreetReply) String() string { return proto.CompactTextString(m) }
func (*GreetReply) ProtoMessage()    {}
func (*GreetReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_communication_7a5af294c0525d0b, []int{2}
}
func (m *GreetReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GreetReply.Unmarshal(m, b)
}
func (m *GreetReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GreetReply.Marshal(b, m, deterministic)
}
func (dst *GreetReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GreetReply.Merge(dst, src)
}
func (m *GreetReply) XXX_Size() int {
	return xxx_messageInfo_GreetReply.Size(m)
}
func (m *GreetReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GreetReply.DiscardUnknown(m)
}

var xxx_messageInfo_GreetReply proto.InternalMessageInfo

func (m *GreetReply) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *GreetReply) GetIp() *IP {
	if m != nil {
		return m.Ip
	}
	return nil
}

// Email login.
type AccessRequest struct {
	Ip                   *IP                  `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	IsCN                 bool                 `protobuf:"varint,2,opt,name=isCN,proto3" json:"isCN,omitempty"`
	Email                *AccessRequest_Email `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *AccessRequest) Reset()         { *m = AccessRequest{} }
func (m *AccessRequest) String() string { return proto.CompactTextString(m) }
func (*AccessRequest) ProtoMessage()    {}
func (*AccessRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_communication_7a5af294c0525d0b, []int{3}
}
func (m *AccessRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AccessRequest.Unmarshal(m, b)
}
func (m *AccessRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AccessRequest.Marshal(b, m, deterministic)
}
func (dst *AccessRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccessRequest.Merge(dst, src)
}
func (m *AccessRequest) XXX_Size() int {
	return xxx_messageInfo_AccessRequest.Size(m)
}
func (m *AccessRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AccessRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AccessRequest proto.InternalMessageInfo

func (m *AccessRequest) GetIp() *IP {
	if m != nil {
		return m.Ip
	}
	return nil
}

func (m *AccessRequest) GetIsCN() bool {
	if m != nil {
		return m.IsCN
	}
	return false
}

func (m *AccessRequest) GetEmail() *AccessRequest_Email {
	if m != nil {
		return m.Email
	}
	return nil
}

type AccessRequest_Email struct {
	Email                string   `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Pwd                  string   `protobuf:"bytes,2,opt,name=pwd,proto3" json:"pwd,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AccessRequest_Email) Reset()         { *m = AccessRequest_Email{} }
func (m *AccessRequest_Email) String() string { return proto.CompactTextString(m) }
func (*AccessRequest_Email) ProtoMessage()    {}
func (*AccessRequest_Email) Descriptor() ([]byte, []int) {
	return fileDescriptor_communication_7a5af294c0525d0b, []int{3, 0}
}
func (m *AccessRequest_Email) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AccessRequest_Email.Unmarshal(m, b)
}
func (m *AccessRequest_Email) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AccessRequest_Email.Marshal(b, m, deterministic)
}
func (dst *AccessRequest_Email) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccessRequest_Email.Merge(dst, src)
}
func (m *AccessRequest_Email) XXX_Size() int {
	return xxx_messageInfo_AccessRequest_Email.Size(m)
}
func (m *AccessRequest_Email) XXX_DiscardUnknown() {
	xxx_messageInfo_AccessRequest_Email.DiscardUnknown(m)
}

var xxx_messageInfo_AccessRequest_Email proto.InternalMessageInfo

func (m *AccessRequest_Email) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *AccessRequest_Email) GetPwd() string {
	if m != nil {
		return m.Pwd
	}
	return ""
}

// The reply to client access.
type AccessReply struct {
	Ip                   *IP      `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AccessReply) Reset()         { *m = AccessReply{} }
func (m *AccessReply) String() string { return proto.CompactTextString(m) }
func (*AccessReply) ProtoMessage()    {}
func (*AccessReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_communication_7a5af294c0525d0b, []int{4}
}
func (m *AccessReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AccessReply.Unmarshal(m, b)
}
func (m *AccessReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AccessReply.Marshal(b, m, deterministic)
}
func (dst *AccessReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccessReply.Merge(dst, src)
}
func (m *AccessReply) XXX_Size() int {
	return xxx_messageInfo_AccessReply.Size(m)
}
func (m *AccessReply) XXX_DiscardUnknown() {
	xxx_messageInfo_AccessReply.DiscardUnknown(m)
}

var xxx_messageInfo_AccessReply proto.InternalMessageInfo

func (m *AccessReply) GetIp() *IP {
	if m != nil {
		return m.Ip
	}
	return nil
}

func (m *AccessReply) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*IP)(nil), "communication.IP")
	proto.RegisterType((*GreetRequest)(nil), "communication.GreetRequest")
	proto.RegisterType((*GreetReply)(nil), "communication.GreetReply")
	proto.RegisterType((*AccessRequest)(nil), "communication.AccessRequest")
	proto.RegisterType((*AccessRequest_Email)(nil), "communication.AccessRequest.Email")
	proto.RegisterType((*AccessReply)(nil), "communication.AccessReply")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CommunicationClient is the client API for Communication service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CommunicationClient interface {
	// Sends a greeting.
	Greet(ctx context.Context, in *GreetRequest, opts ...grpc.CallOption) (*GreetReply, error)
	// Login email.
	Login(ctx context.Context, in *AccessRequest, opts ...grpc.CallOption) (*AccessReply, error)
}

type communicationClient struct {
	cc *grpc.ClientConn
}

func NewCommunicationClient(cc *grpc.ClientConn) CommunicationClient {
	return &communicationClient{cc}
}

func (c *communicationClient) Greet(ctx context.Context, in *GreetRequest, opts ...grpc.CallOption) (*GreetReply, error) {
	out := new(GreetReply)
	err := c.cc.Invoke(ctx, "/communication.Communication/Greet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *communicationClient) Login(ctx context.Context, in *AccessRequest, opts ...grpc.CallOption) (*AccessReply, error) {
	out := new(AccessReply)
	err := c.cc.Invoke(ctx, "/communication.Communication/Login", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CommunicationServer is the server API for Communication service.
type CommunicationServer interface {
	// Sends a greeting.
	Greet(context.Context, *GreetRequest) (*GreetReply, error)
	// Login email.
	Login(context.Context, *AccessRequest) (*AccessReply, error)
}

func RegisterCommunicationServer(s *grpc.Server, srv CommunicationServer) {
	s.RegisterService(&_Communication_serviceDesc, srv)
}

func _Communication_Greet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GreetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CommunicationServer).Greet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/communication.Communication/Greet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CommunicationServer).Greet(ctx, req.(*GreetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Communication_Login_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AccessRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CommunicationServer).Login(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/communication.Communication/Login",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CommunicationServer).Login(ctx, req.(*AccessRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Communication_serviceDesc = grpc.ServiceDesc{
	ServiceName: "communication.Communication",
	HandlerType: (*CommunicationServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Greet",
			Handler:    _Communication_Greet_Handler,
		},
		{
			MethodName: "Login",
			Handler:    _Communication_Login_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "communication.proto",
}

func init() { proto.RegisterFile("communication.proto", fileDescriptor_communication_7a5af294c0525d0b) }

var fileDescriptor_communication_7a5af294c0525d0b = []byte{
	// 433 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x53, 0xcb, 0x6e, 0xd3, 0x40,
	0x14, 0xcd, 0x8c, 0xed, 0x3c, 0x6e, 0x30, 0x32, 0xc3, 0xc6, 0x18, 0x2a, 0xa2, 0xd9, 0x90, 0x4d,
	0x1c, 0xc9, 0x2c, 0x59, 0xd5, 0x01, 0x55, 0x95, 0x10, 0xaa, 0xe6, 0x0b, 0x70, 0xed, 0xa9, 0x3b,
	0x92, 0x1f, 0x83, 0x3d, 0x01, 0x65, 0x87, 0x58, 0xf2, 0x03, 0xfc, 0x0b, 0x2b, 0x7e, 0x85, 0x1d,
	0x7c, 0x45, 0xd1, 0x4c, 0x62, 0xc9, 0x2e, 0x10, 0xb5, 0xbb, 0xd1, 0x3d, 0xe7, 0x9e, 0x73, 0xef,
	0xb9, 0x36, 0x3c, 0x4e, 0xeb, 0xb2, 0xdc, 0x56, 0x22, 0x4d, 0x94, 0xa8, 0xab, 0x50, 0x36, 0xb5,
	0xaa, 0x89, 0x3b, 0x28, 0x06, 0xaf, 0x72, 0xa1, 0xae, 0xb7, 0x97, 0x61, 0x5a, 0x97, 0xeb, 0x62,
	0x77, 0xa5, 0xd6, 0x86, 0x95, 0xae, 0x72, 0x5e, 0xad, 0x3e, 0x26, 0x85, 0xc8, 0x12, 0xc5, 0xd7,
	0x7f, 0x3d, 0xf6, 0x5a, 0xf4, 0x0a, 0xf0, 0xf9, 0x05, 0x39, 0x01, 0x3b, 0xc9, 0xb2, 0xc6, 0x47,
	0x0b, 0xb4, 0x9c, 0xc5, 0xb3, 0xef, 0xbf, 0x7f, 0x58, 0x76, 0x83, 0x25, 0x62, 0xa6, 0xac, 0xe1,
	0x2a, 0x29, 0xb9, 0x8f, 0x07, 0xf0, 0x35, 0x62, 0xa6, 0x4c, 0x28, 0xd8, 0xb2, 0x6e, 0x94, 0x6f,
	0x2d, 0xd0, 0xd2, 0x89, 0x1f, 0x6a, 0x78, 0x16, 0x4c, 0xfc, 0x9b, 0x1b, 0x6b, 0xf9, 0x79, 0xca,
	0x0c, 0x46, 0xbf, 0x20, 0x78, 0x70, 0xd6, 0x70, 0xae, 0x18, 0xff, 0xb0, 0xe5, 0xad, 0x22, 0x01,
	0x60, 0x91, 0x19, 0x43, 0x3b, 0x06, 0xdd, 0xe2, 0x44, 0xd6, 0xe2, 0xd7, 0x84, 0x61, 0x91, 0x91,
	0x15, 0x60, 0x21, 0x8d, 0xdb, 0x3c, 0x7a, 0x14, 0x0e, 0x23, 0x38, 0xbf, 0x38, 0xd0, 0xbf, 0x22,
	0xec, 0x21, 0x86, 0x85, 0x24, 0x2f, 0x60, 0x52, 0xf2, 0xb6, 0x4d, 0x72, 0x6e, 0x46, 0x98, 0xc5,
	0xae, 0x26, 0x4c, 0x9b, 0xb1, 0x37, 0xd2, 0x43, 0xb0, 0x0e, 0xa5, 0x19, 0xc0, 0x61, 0x06, 0x59,
	0xec, 0xfa, 0x6d, 0xe8, 0x58, 0xdb, 0x3d, 0xc7, 0xa1, 0x3f, 0x11, 0xb8, 0xa7, 0x69, 0xca, 0xdb,
	0xb6, 0xdb, 0x75, 0x2f, 0x80, 0xee, 0xba, 0x0f, 0x01, 0x5b, 0xb4, 0x9b, 0x77, 0xc6, 0x71, 0xca,
	0xcc, 0x9b, 0xbc, 0x06, 0x87, 0x97, 0x89, 0x28, 0xcc, 0x86, 0xf3, 0x88, 0xde, 0x52, 0x19, 0xf8,
	0x85, 0x6f, 0x34, 0x73, 0x20, 0xbb, 0x6f, 0x0e, 0xce, 0xc0, 0x31, 0x18, 0x79, 0xde, 0xc9, 0x0d,
	0x2f, 0xfe, 0xbe, 0x63, 0x92, 0x13, 0xb0, 0xe4, 0xa7, 0xec, 0x70, 0xf1, 0xb9, 0x86, 0xc7, 0x8d,
	0xed, 0x8d, 0x7c, 0x8f, 0xe9, 0x3a, 0xe5, 0x30, 0xef, 0x2c, 0x75, 0x94, 0xf7, 0x5c, 0xb0, 0x97,
	0x3c, 0x3e, 0x96, 0x7c, 0xf4, 0x0d, 0x81, 0xbb, 0xe9, 0xab, 0x91, 0x53, 0x70, 0xcc, 0x09, 0xc9,
	0xd3, 0x5b, 0x36, 0xfd, 0x8f, 0x2b, 0x78, 0xf2, 0x6f, 0x50, 0x16, 0x3b, 0x3a, 0x22, 0x1b, 0x70,
	0xde, 0xd6, 0xb9, 0xa8, 0xc8, 0xb3, 0x63, 0x21, 0x06, 0xc1, 0x7f, 0x50, 0x23, 0x72, 0x39, 0x36,
	0xbf, 0xcf, 0xcb, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff, 0xf6, 0x89, 0x67, 0xa5, 0xa1, 0x03, 0x00,
	0x00,
}
